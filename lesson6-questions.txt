Questions for Lesson 6

1. When you enable CRUD operations on a table in the database, you need to add four things
to your Rails application.  When you generate a scaffold, all four are created.What are they?

Model = to store the database
view = to presenting data to users
controller = processing the incoming requests
migration = managing changes to the database


2. When you specify a route in config/routes.rb, you need to include certain information.  What
must be included? In addition, you may specify an additional parameter to create a variable
that describes the route.  How do you do that? What variable is created?

additional parameter = id
variable created from id = get/users/ id

3. What does the Rails db:migrate command do?

creates additional/new tables in the database 

4. What file do you look at to see the current database schema?

db schema can be found in db/schema.rb

5. What command shows the routes?

bin/rails routes

6. How can you start the Rails console? How can you do CRUD operations from the console?

to start the rails console = bin/rails console OR bin/rails c
open new terminal to run rails console


7. What statements are in erb files that make them different from html files?  What are the
two kinds of special statements, and how are they marked in the erb file? Where are they executed?

two statements in erb files = <% %> and @user
they are executed within HTML template on the server-side (SSR)


8. Consider this statement: @forum = Forum.new().  Why is Forum capitalized?  Why is @forum not
capitalized? Why is the @ used?

Forum is a class 
forum = because it is the instance of the class
@ = to pass data or link a new entity of Forum class

9. Consider these statements:

@forum = Forum.new(...) = link a new entity of Forum
@forum =Forum.create(...) = creating a new record in memory
@forum.save(...) = it does sql insert, we are using ActiveRecord (ORM) to do it

What is the difference between Forum.new() and Forum.create()?  Why can't you do Forum.save(...)?


10. In the forums controller, you have a method called show:

  def show
  end

This is an action method.  It is an action method for only one reason: There is a route
that points to it.  But there's nothing in the method!  It will do the right things
because the default behavior does what is needed.  What does the default behavior
do?  How does it know which forum to show?  Whenever you have an action method, there
is a hash called params that is passed to that method.  And, in this case, the params
hash has a value, params[:id].  What is the value for this element of the hash? How
did it get there?

action method is a method within the controller
value = id from url request
default behavior ensure that common task in web app are consistent
which forum to show with routing




